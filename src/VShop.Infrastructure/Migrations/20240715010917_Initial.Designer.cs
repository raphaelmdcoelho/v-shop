// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace VShop.Infrastructure.Migrations
{
    [DbContext(typeof(InventoryDbContext))]
    [Migration("20240715010917_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.7");

            modelBuilder.Entity("Category", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("Category", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreatedAt = new DateTime(2024, 7, 14, 22, 9, 17, 729, DateTimeKind.Local).AddTicks(8810),
                            Description = "Electronic products",
                            IsDeleted = false,
                            Name = "Electronics",
                            UpdatedAt = new DateTime(2024, 7, 14, 22, 9, 17, 729, DateTimeKind.Local).AddTicks(8820)
                        },
                        new
                        {
                            Id = 2,
                            CreatedAt = new DateTime(2024, 7, 14, 22, 9, 17, 729, DateTimeKind.Local).AddTicks(8824),
                            Description = "Clothing products",
                            IsDeleted = false,
                            Name = "Clothing",
                            UpdatedAt = new DateTime(2024, 7, 14, 22, 9, 17, 729, DateTimeKind.Local).AddTicks(8824)
                        });
                });

            modelBuilder.Entity("Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int>("CategoryId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("TEXT");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<string>("ImageUrl")
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.Property<decimal>("Price")
                        .HasColumnType("TEXT");

                    b.Property<int>("Quantity")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("UpdatedAt")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("CategoryId");

                    b.ToTable("Product", (string)null);

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CategoryId = 1,
                            CreatedAt = new DateTime(2024, 7, 14, 22, 9, 17, 729, DateTimeKind.Local).AddTicks(8977),
                            Description = "Laptop",
                            ImageUrl = "https://www.google.com",
                            IsDeleted = false,
                            Name = "Laptop",
                            Price = 1000m,
                            Quantity = 10,
                            UpdatedAt = new DateTime(2024, 7, 14, 22, 9, 17, 729, DateTimeKind.Local).AddTicks(8978)
                        },
                        new
                        {
                            Id = 2,
                            CategoryId = 2,
                            CreatedAt = new DateTime(2024, 7, 14, 22, 9, 17, 729, DateTimeKind.Local).AddTicks(8981),
                            Description = "T-shirt",
                            ImageUrl = "https://www.google.com",
                            IsDeleted = false,
                            Name = "T-shirt",
                            Price = 20m,
                            Quantity = 100,
                            UpdatedAt = new DateTime(2024, 7, 14, 22, 9, 17, 729, DateTimeKind.Local).AddTicks(8982)
                        });
                });

            modelBuilder.Entity("Product", b =>
                {
                    b.HasOne("Category", "Category")
                        .WithMany("Products")
                        .HasForeignKey("CategoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Category");
                });

            modelBuilder.Entity("Category", b =>
                {
                    b.Navigation("Products");
                });
#pragma warning restore 612, 618
        }
    }
}
